---
openapi: 3.0.3
info:
  title: onecx-welcome-bff
  description: Backend-For-Frontend (BFF) service for onecx-welcome. This API provides endpoints to manage Welcome Images
  version: 1.0.0
servers:
  - url: "http://onecx-welcome-bff:8080"
tags:
  - name: imagesInternal
    description: Managing Welcome page Images
  - name: configExportImport
    description: Importing and Exporting Welcome page configuration (Images)
paths:
  /images/info/{id}:
    get:
      x-onecx:
        permissions:
          image:
            - read
      tags:
        - imagesInternal
      description: Get an image information by its id
      operationId: getImageInfoById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Image information retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageInfo"
        "404":
          description: Image information not found
    put:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - imagesInternal
      description: Update an image information by its id
      operationId: updateImageInfo
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageInfo'
      responses:
        "200":
          description: Image information updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfo'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    delete:
      x-onecx:
        permissions:
          image:
            - delete
      tags:
        - imagesInternal
      description: Delete an image information by its id
      operationId: deleteImageInfoById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: Image information deleted successfully
        "404":
          description: Image information not found
  /images/info:
    post:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - imagesInternal
      description: Create an new image information
      operationId: createImageInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageInfo'
      responses:
        "201":
          description: Image information created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfo'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /images/{workspaceName}/info:
    get:
      x-onecx:
        permissions:
          image:
            - read
      tags:
        - imagesInternal
      description: Get all existing image information by workspace name
      operationId: getAllImageInfosByWorkspaceName
      parameters:
        - in: path
          name: workspaceName
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Image information retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageInfo'
  /images/info/reorder:
    post:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - imagesInternal
      description: Update the order of images
      operationId: updateImageOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageInfoReorderRequest'
      responses:
        "200":
          description: Image order updated successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /images:
    post:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - imagesInternal
      description: Create an new image
      operationId: createImage
      requestBody:
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        "201":
          description: Image created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDataResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /images/{id}:
    get:
      x-onecx:
        permissions:
          image:
            - read
      tags:
        - imagesInternal
      description: Get an image by its id
      operationId: getImageById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Image retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDataResponse'
        "404":
          description: Image not found
    put:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - imagesInternal
      description: Update an image by its id
      operationId: updateImageById
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Image updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDataResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /images/{workspaceName}/import:
    post:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - configExportImport
      description: Import welcome page configuration into a specific workspace by its name
      operationId: importConfiguration
      parameters:
        - in: path
          name: workspaceName
          schema:
            type: string
          required: true
          description: target workspace for import
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WelcomeSnapshot'
      responses:
        "200":
          description: Configuration imported successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /images/export:
    post:
      x-onecx:
        permissions:
          image:
            - read
      tags:
        - configExportImport
      description: Export a welcome page configuration
      operationId: exportConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportWelcomeRequest'
      responses:
        "200":
          description: Configuration exported successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WelcomeSnapshot'
        "404":
          description: No images found
components:
  schemas:
    WelcomeSnapshot:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        config:
          $ref: '#/components/schemas/WelcomeConfig'
    WelcomeConfig:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/EximImage'
    EximImage:
      type: object
      nullable: false
      properties:
        image:
          $ref: '#/components/schemas/EximImageInfo'
        imageData:
          $ref: '#/components/schemas/EximImageData'
    ExportWelcomeRequest:
      type: object
      properties:
        workspaceName:
          type: string
    EximImageData:
      type: object
      properties:
        imageData:
          type: string
          format: binary
        dataLength:
          type: integer
        mimeType:
          type: string
    EximImageInfo:
      required:
        - workspaceName
      type: object
      properties:
        position:
          type: string
        visible:
          type: boolean
        objectFit:
          $ref: '#/components/schemas/ObjectFit'
        objectPosition:
          type: string
        backgroundColor:
          type: string
        url:
          type: string
    ImageDataResponse:
      type: object
      properties:
        imageId:
          type: string
        imageData:
          type: string
          format: binary
        dataLength:
          type: integer
        mimeType:
          type: string
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
    ImageInfo:
      required:
        - workspaceName
      type: object
      properties:
        position:
          type: string
        visible:
          type: boolean
        objectFit:
          $ref: '#/components/schemas/ObjectFit'
        objectPosition:
          type: string
        backgroundColor:
          type: string
        url:
          type: string
        imageId:
          type: string
        id:
          type: string
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        workspaceName:
          type: string
    ObjectFit:
      type: string
      enum: [ none, contain, cover, fill, scale-down ]
    ImageInfoReorderRequest:
      type: object
      properties:
        imageInfos:
          type: array
          items:
            $ref: '#/components/schemas/ImageInfo'
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string

