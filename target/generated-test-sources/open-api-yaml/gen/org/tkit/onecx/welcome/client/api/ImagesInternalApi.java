package gen.org.tkit.onecx.welcome.client.api;

import java.io.File;
import gen.org.tkit.onecx.welcome.client.model.ImageDataResponse;
import gen.org.tkit.onecx.welcome.client.model.ImageInfo;
import gen.org.tkit.onecx.welcome.client.model.ProblemDetailResponse;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.MediaType;

import jakarta.enterprise.context.ApplicationScoped;

import io.quarkiverse.openapi.generator.annotations.GeneratedClass;
import io.quarkiverse.openapi.generator.annotations.GeneratedMethod;
import io.quarkiverse.openapi.generator.annotations.GeneratedParam;

/**
  * onecx-welcome internal api
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@Path("/internal/images")
@RegisterRestClient(baseUri="http://onecx-welcome-svc:8080", configKey="onecx_welcome_internal")
@GeneratedClass(value="onecx-welcome-internal.yaml", tag = "ImagesInternal")
@ApplicationScoped
@org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders
public interface ImagesInternalApi {

     /**
     * create image
     *
     * @param body 
     * @param contentLength 
     */
    @POST
    @Consumes({"image/*"})
    @Produces({"application/json"})
    @GeneratedMethod ("createImage")
    public jakarta.ws.rs.core.Response createImage(
        @GeneratedParam("Content-Length") @HeaderParam("Content-Length") Integer contentLength, 
        byte[] body
    );

     /**
     * create image info
     *
     * @param imageInfo 
     */
    @POST
    @Path("/info")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("createImageInfo")
    public jakarta.ws.rs.core.Response createImageInfo(
        ImageInfo imageInfo
    );

     /**
     * delete image information
     *
     * @param id 
     */
    @DELETE
    @Path("/info/{id}")
    @GeneratedMethod ("deleteImageInfoById")
    public jakarta.ws.rs.core.Response deleteImageInfoById(
        @GeneratedParam("id") @PathParam("id") String id
    );

     /**
     * get all existing image-infos
     *
     */
    @GET
    @Path("/info")
    @Produces({"application/json"})
    @GeneratedMethod ("getAllImageInfos")
    public jakarta.ws.rs.core.Response getAllImageInfos(
    );

     /**
     * get Image by id
     *
     * @param id 
     */
    @GET
    @Path("/{id}")
    @Produces({"application/json"})
    @GeneratedMethod ("getImageById")
    public jakarta.ws.rs.core.Response getImageById(
        @GeneratedParam("id") @PathParam("id") String id
    );

     /**
     * get Image information by id
     *
     * @param id 
     */
    @GET
    @Path("/info/{id}")
    @Produces({"application/json"})
    @GeneratedMethod ("getImageInfoById")
    public jakarta.ws.rs.core.Response getImageInfoById(
        @GeneratedParam("id") @PathParam("id") String id
    );

     /**
     * update Image by id
     *
     * @param id 
     * @param body 
     * @param contentLength 
     */
    @PUT
    @Path("/{id}")
    @Consumes({"image/*"})
    @Produces({"application/json"})
    @GeneratedMethod ("updateImageById")
    public jakarta.ws.rs.core.Response updateImageById(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("Content-Length") @HeaderParam("Content-Length") Integer contentLength, 
        byte[] body
    );

     /**
     * update Image information
     *
     * @param id 
     * @param imageInfo 
     */
    @PUT
    @Path("/info/{id}")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("updateImageInfo")
    public jakarta.ws.rs.core.Response updateImageInfo(
        @GeneratedParam("id") @PathParam("id") String id, 
        ImageInfo imageInfo
    );

}
